doctype html
html
    head
      meta(charset='utf-8')
      meta(http-equiv='X-UA-Compatible', content='IE=edge')
      meta(name='viewport', content='width=device-width, initial-scale=1.0')
      meta(name='theme-color' content='#4DA5F4')
      //- meta(name='csrf-token', content=_csrf)
      title #{title} AllCommunication
      link(rel='stylesheet', type='text/css', href='/css/easyrtc.css')
      link(rel='stylesheet', type='text/css', href='/css/video.css')
      link(href='/css/watson-bootstrap-style.css', rel='stylesheet')
      link(href='/css/style.css', rel='stylesheet')
      // Assumes global locations for socket.io.js and easyrtc.js
      script(src='/socket.io/socket.io.js')
      script(type='text/javascript', src='/js/easyrtc.js')
      script(type='text/javascript', src='/js/video.js')

      link(rel='shortcut icon', href='/favicon.png')
      link(rel='stylesheet', href='/css/main.css')
      
    body(onload='connect();')
        include partials/header

        .container
            include partials/flash
            .row
                .col-lg-6.col-md-6.col-sm-6
                  h2
                    | AllCommunication
                    small  Video
                nav.navbar.navbar-inverse.col-lg-3.col-md-3.col-sm-3.pull-right(style='margin-top: 10px; margin-bottom: 10px')
                    li#recordButton.button-row.nav-inverse-color(style='width:100%', onclick='updateTimeCount()')
                      img#microphoneIcon.icon(src='/images/microphone.svg')
                      span.nav-label Record Audio
                .row
                  .col-lg-12.col-md-12.col-sm-12
                    .audioParent
                      audio.audio(style='display:none', controls='')
                        | Your browser does not support the audio element.
            .row
              //- #demoContainer
              //- #connectControls
              //-   #iam Not yet connected...
              //-   br
              //-   strong Connected users:
              //-   #otherClients
              #videos(style='width: 100%; height: 60vh; margin-left: 0; margin-right: 0; margin-bottom: 1.5vh')
                video#selfVideo.easyrtcMirror(autoplay='autoplay', muted='muted', volume='0', style='width: 100%; height: 100%; margin: 0 auto; border: transparent')
                div(style='position:relative;float:left;display:none')
                  video#callerVideo(autoplay='autoplay')
                // each caller video needs to be in it"s own div so it"s close button can be positioned correctly
              .col-lg-12.col-md-12.col-sm-12(style='padding: 0;')
                  .well
                    form.form-horizontal(autocomplete='off')
                      div(role='tabpanel')
                        .hr-tab
                        fieldset
                          .row.error-row
                            .col-lg-12
                              #errorAlert
                                span#errorMessage
                                a#errorClose.pull-right(href='#') ×
                          .row.notification-row
                            .col-lg-12
                              #notificationAlert
                                span#notificationMessage
                                a#notificationClose.pull-right(href='#') ×
                          .form-group.row.tabpanel-row
                            .col-lg-12
                              .tab-content
                                #home2.tab-pane.active(role='tabpanel')
                                  textarea#resultsText(readonly='', name='resultsText', style='height: 12vh')
                                #profile2.tab-pane(role='tabpanel')
                                  textarea#resultsJSON(readonly='')
                                .text-right.timeCountFootnote
                                  span.timeCount.small
                                  span.small  

            include partials/footer

        script(src='/js/lib/jquery-2.2.4.min.js')
        script(src='/js/lib/bootstrap.min.js')
        script(src='/js/main.js')
        block script
        // Google Analytics: change UA-XXXXX-X to be your site's ID
        script.
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
          ga('create', 'UA-XXXXX-X', 'auto');
          ga('send', 'pageview');
        script(src="/js/index.js")

        script(type="text/javascript").
          var counterr = 0;

          function updateTimeCount() {
            counterr = counterr + 1;

            for (var i = 1; i < 99999; i++)
              window.clearInterval(i);
            var duration = 0;
            var timer = duration,
              minutes, seconds;
            if (counterr % 2) {
              setInterval(function() {
                minutes = parseInt(timer / 60, 10);
                seconds = parseInt(timer % 60, 10);

                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;

                $('.timeCount').text(minutes + ":" + seconds);

                if (++timer < 0) {
                  timer = duration;
                }
              }, 1000);
            }
          }

        
        script(src="https://www.gstatic.com/firebasejs/3.3.2/firebase.js")
        script.
          // Initialize Firebase
          var config = {
            apiKey: "AIzaSyCt2Gn5AsmXi_GId_0pWI4Lz7SGkjOZSVM",
            authDomain: "allcommunication-143001.firebaseapp.com",
            databaseURL: "https://allcommunication-143001.firebaseio.com",
            storageBucket: "allcommunication-143001.appspot.com",
          };
          firebase.initializeApp(config);
          var database = firebase.database();

          function writeUserData(text) {
            firebase.database().ref('words/').set({
              word: text
            });
          }
