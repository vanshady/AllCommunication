extends layout.pug
block style
    link(href='css/watson-bootstrap-style.css', rel='stylesheet')
    link(href='css/style.css', rel='stylesheet')
block content
    .row
      .col-lg-12.col-md-12.col-sm-12
        h2 AllCommunication
      .row
        .col-lg-12.col-md-12.col-sm-12
          .audioParent
            audio.audio(style='display:none', controls='')
              | Your browser does not support the audio element.
      .row
        //- .row(style="display:none")
        nav.navbar.navbar-inverse.col-lg-3.col-md-3.col-sm-3
          li#recordButton.button-row.nav-inverse-color(style='width:100%', onclick='updateTimeCount()')
            img#microphoneIcon.icon(src='images/microphone.svg')
            span.nav-label Record Audio
      .row(style='  margin: 0;')
        .col-lg-12.col-md-12.col-sm-12(style='padding: 0;')
          .well
            form.form-horizontal(autocomplete='off')
              div(role='tabpanel')
                fieldset
                  .row.error-row
                    .col-lg-12
                      #errorAlert
                        span#errorMessage
                        a#errorClose.pull-right(href='#') ×
                  .row.notification-row
                    .col-lg-12
                      #notificationAlert
                        span#notificationMessage
                        a#notificationClose.pull-right(href='#') ×
                  .form-group.row.tabpanel-row
                    .col-lg-12
                      .tab-content
                        #home2.tab-pane.active(role='tabpanel')
                          textarea#resultsText(readonly='', name='resultsText', style='height: 12vh')
                        #profile2.tab-pane(role='tabpanel', style="display:none")
                          textarea#resultsJSON(readonly='')
                        .text-right.timeCountFootnote
                          span.timeCount.small
                          span.small
block script
    script(src="js/index.js")

    script(type="text/javascript").
      var counterr = 0;

      function updateTimeCount() {
        counterr = counterr + 1;

        for (var i = 1; i < 99999; i++)
          window.clearInterval(i);
        var duration = 0;
        var timer = duration,
          minutes, seconds;
        if (counterr % 2) {
          setInterval(function() {
            minutes = parseInt(timer / 60, 10);
            seconds = parseInt(timer % 60, 10);

            minutes = minutes < 10 ? "0" + minutes : minutes;
            seconds = seconds < 10 ? "0" + seconds : seconds;

            $('.timeCount').text(minutes + ":" + seconds);

            if (++timer < 0) {
              timer = duration;
            }
          }, 1000);
        }
      }

      $(window).load(function() {
        $('#recordButton').click();
      });
    script(src="https://www.gstatic.com/firebasejs/3.3.2/firebase.js")
    script.
      // Initialize Firebase
      var config = {
        apiKey: "AIzaSyCt2Gn5AsmXi_GId_0pWI4Lz7SGkjOZSVM",
        authDomain: "allcommunication-143001.firebaseapp.com",
        databaseURL: "https://allcommunication-143001.firebaseio.com",
        storageBucket: "allcommunication-143001.appspot.com",
      };
      firebase.initializeApp(config);
      var database = firebase.database();

      function writeUserData(text) {
        firebase.database().ref('words/').set({
          word: text
        });
      }
